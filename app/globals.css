:root{
  --bg: #f3f3f0; /* matte plaster base */
  --bg-2: #f6f6f3; /* highlight tint */
  --ink: #2a2a2a;
  --muted: #6b6b6b;
  --accent: #8a8a84; /* neutral stone accent */

  /* Light from top-left */
  --shadow-1: rgba(0,0,0,0.14);
  --shadow-2: rgba(0,0,0,0.08);
  --highlight-1: rgba(255,255,255,0.85);
  --highlight-2: rgba(255,255,255,0.55);

  --radius-lg: 22px;
  --radius-md: 16px;
  --radius-sm: 12px;

  --spacing-xxl: 56px;
  --spacing-xl: 36px;
  --spacing-lg: 24px;
  --spacing-md: 16px;
  --spacing-sm: 12px;

  --greek-key-data: url("data:image/svg+xml;utf8,\
  <svg xmlns='http://www.w3.org/2000/svg' width='48' height='48' viewBox='0 0 48 48'>\
    <defs>\
      <pattern id='k' width='24' height='24' patternUnits='userSpaceOnUse'>\
        <path d='M0 0h24v24H0z' fill='none'/>\
        <path d='M0 0h18v6H6v12h12v-6h-6' fill='none' stroke='%23909090' stroke-width='1.5' stroke-linecap='square'/>\
      </pattern>\
    </defs>\
    <rect width='100%' height='100%' fill='url(%23k)'/>\
  </svg>");

  /* Egg-and-dart border image (edges only) */
  --egg-dart-border: url("data:image/svg+xml;utf8,\
  <svg xmlns='http://www.w3.org/2000/svg' width='96' height='96' viewBox='0 0 96 96'>\
    <defs>\
      <linearGradient id='lg' x1='0' x2='0' y1='0' y2='1'>\
        <stop offset='0' stop-color='%23ffffff' stop-opacity='0.95'/>\
        <stop offset='1' stop-color='%23d9d9d4' stop-opacity='0.9'/>\
      </linearGradient>\
    </defs>\
    <rect x='0' y='0' width='96' height='96' fill='none' />\
    <!-- top eggs/darts -->\
    <g transform='translate(8,6)'>\
      <g fill='url(%23lg)' stroke='%23c9c9c3' stroke-width='0.6'>\
        <ellipse cx='4' cy='6' rx='4' ry='6'/>\
        <path d='M12 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='24' cy='6' rx='4' ry='6'/>\
        <path d='M32 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='44' cy='6' rx='4' ry='6'/>\
        <path d='M52 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='64' cy='6' rx='4' ry='6'/>\
        <path d='M72 0 l4 12 l4 -12' fill='none'/>\
      </g>\
    </g>\
    <!-- bottom -->\
    <g transform='translate(8,90) scale(1,-1)'>\
      <g fill='url(%23lg)' stroke='%23c9c9c3' stroke-width='0.6'>\
        <ellipse cx='4' cy='6' rx='4' ry='6'/>\
        <path d='M12 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='24' cy='6' rx='4' ry='6'/>\
        <path d='M32 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='44' cy='6' rx='4' ry='6'/>\
        <path d='M52 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='64' cy='6' rx='4' ry='6'/>\
        <path d='M72 0 l4 12 l4 -12' fill='none'/>\
      </g>\
    </g>\
    <!-- left -->\
    <g transform='translate(6,8) rotate(90)'>\
      <g fill='url(%23lg)' stroke='%23c9c9c3' stroke-width='0.6'>\
        <ellipse cx='4' cy='6' rx='4' ry='6'/>\
        <path d='M12 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='24' cy='6' rx='4' ry='6'/>\
        <path d='M32 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='44' cy='6' rx='4' ry='6'/>\
        <path d='M52 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='64' cy='6' rx='4' ry='6'/>\
        <path d='M72 0 l4 12 l4 -12' fill='none'/>\
      </g>\
    </g>\
    <!-- right -->\
    <g transform='translate(90,8) rotate(90) scale(-1,1)'>\
      <g fill='url(%23lg)' stroke='%23c9c9c3' stroke-width='0.6'>\
        <ellipse cx='4' cy='6' rx='4' ry='6'/>\
        <path d='M12 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='24' cy='6' rx='4' ry='6'/>\
        <path d='M32 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='44' cy='6' rx='4' ry='6'/>\
        <path d='M52 0 l4 12 l4 -12' fill='none'/>\
        <ellipse cx='64' cy='6' rx='4' ry='6'/>\
        <path d='M72 0 l4 12 l4 -12' fill='none'/>\
      </g>\
    </g>\
  </svg>");

  /* Acanthus leaf glyph for center motif */
  --acanthus: url("data:image/svg+xml;utf8,\
  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'>\
    <defs>\
      <linearGradient id='g' x1='0' y1='0' x2='0' y2='1'>\
        <stop offset='0' stop-color='%23ffffff'/>\
        <stop offset='1' stop-color='%23d8d8d3'/>\
      </linearGradient>\
    </defs>\
    <path d='M32 4c-4 4-6 8-6 12 0 4 2 8 6 12-8-2-14 0-18 6 6-2 10 0 12 4-8 0-12 4-14 10 6-4 12-4 18 0-6 0-10 4-12 10 6-4 12-4 20 0 8-4 14-4 20 0-2-6-6-10-12-10 6-4 12-4 18 0-2-6-6-10-14-10 2-4 6-6 12-4-4-6-10-8-18-6 4-4 6-8 6-12 0-4-2-8-6-12z' fill='url(%23g)' stroke='%23cfcfca' stroke-width='0.8'/>\
  </svg>");
}

*{ box-sizing: border-box; }
html, body { height: 100%; }
body { color: var(--ink); }

.plaster-bg{
  background-color: var(--bg);
  background-image:
    radial-gradient(1200px 800px at -20% -20%, rgba(255,255,255,0.9), rgba(255,255,255,0) 50%),
    radial-gradient(1200px 800px at 120% 120%, rgba(0,0,0,0.06), rgba(0,0,0,0) 50%),
    repeating-linear-gradient(135deg, rgba(255,255,255,0.04) 0, rgba(255,255,255,0.04) 2px, rgba(0,0,0,0.02) 2px, rgba(0,0,0,0.02) 4px);
  background-blend-mode: soft-light, multiply, normal;
}

.viewport{
  min-height: 100svh;
  display: grid;
  place-items: center;
  padding: var(--spacing-xxl) var(--spacing-lg);
}

.panel{
  width: min(720px, 100%);
  border-radius: var(--radius-lg);
  padding: var(--spacing-xxl);
  background: var(--bg);
}

.neu-surface{
  /* raised/extruded */
  box-shadow:
    /* highlight */ -18px -18px 36px var(--highlight-1),
    /* main shadow */ 18px 18px 36px var(--shadow-1),
    /* contact clarity */ 4px 4px 8px var(--shadow-2) inset,
    -2px -2px 6px var(--highlight-2) inset;
}

.neu-recessed{
  border-radius: var(--radius-md);
  background: var(--bg);
  box-shadow:
    inset 16px 16px 36px rgba(0,0,0,0.18),
    inset -16px -16px 36px rgba(255,255,255,0.85);
  padding: 22px 20px 18px 20px;
}

.panel__header{ margin-bottom: var(--spacing-xl); }
.title{ font-size: 2.2rem; letter-spacing: 0.02em; margin: 0 0 6px; }
.subtitle{ color: var(--muted); margin: 0; }

.form{ display: grid; gap: var(--spacing-lg); }
.label{ display:block; font-size: 0.9rem; color: var(--muted); margin-bottom: 10px; }

.input{
  width: 100%;
  appearance: none;
  border: none;
  outline: none;
  color: var(--ink);
  background: transparent;
  padding: 16px 18px;
  border-radius: 14px;
  /* inner deboss for the actual field cavity */
  box-shadow:
    inset 6px 6px 14px rgba(0,0,0,0.12),
    inset -6px -6px 14px rgba(255,255,255,0.7);
}

/* Greek key pattern softly debossed inside inputs */
.with-greek-key{
  position: relative;
  background-image: var(--greek-key-data);
  background-size: 24px 24px;
  background-position: 8px 8px;
  background-repeat: repeat;
  filter: contrast(105%) brightness(101%);
  /* soften and deboss using multi-inset shadows */
  box-shadow:
    inset 8px 8px 18px rgba(0,0,0,0.14),
    inset -8px -8px 18px rgba(255,255,255,0.75),
    inset 0 1px 0 rgba(255,255,255,0.6),
    inset 0 -1px 0 rgba(0,0,0,0.06);
  opacity: 0.98;
}

.actions{
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--spacing-md);
  margin-top: var(--spacing-md);
}

.btn{
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  padding: 16px 22px;
  border-radius: 16px;
  border: 0;
  background: var(--bg);
  color: var(--ink);
  cursor: pointer;
  user-select: none;
  transition: transform 120ms ease, box-shadow 120ms ease;
}

.btn-primary{
  box-shadow:
    -12px -12px 24px var(--highlight-1),
    12px 12px 24px var(--shadow-1);
}
.btn-primary:active{ transform: translate(1px,1px); }

/* Egg-and-dart raised border around the primary button */
.with-egg-dart{
  border: 14px solid transparent;
  border-image-source: var(--egg-dart-border);
  border-image-slice: 28 fill;
  border-image-width: 14px;
  border-image-repeat: round;
}

/* Secondary button with central acanthus leaf relief */
.btn-ghost{
  background: var(--bg-2);
  color: var(--ink);
  box-shadow:
    -10px -10px 22px rgba(255,255,255,0.8),
    10px 10px 22px rgba(0,0,0,0.12),
    inset 0 1px 0 rgba(255,255,255,0.6),
    inset 0 -1px 0 rgba(0,0,0,0.05);
}
.with-acanthus::before{
  content: "";
  position: absolute;
  inset: 18% 28%;
  background-image: var(--acanthus);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  opacity: 0.9;
  filter: drop-shadow(-1px -1px 1px rgba(255,255,255,0.7)) drop-shadow(2px 2px 2px rgba(0,0,0,0.18));
  pointer-events: none;
}

.meta{
  margin-top: var(--spacing-sm);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.checkbox{ display: inline-flex; align-items: center; gap: 10px; color: var(--muted); }
.checkbox input{
  appearance: none;
  width: 20px; height: 20px;
  border-radius: 7px;
  background: var(--bg);
  box-shadow:
    inset 4px 4px 8px rgba(0,0,0,0.15),
    inset -4px -4px 8px rgba(255,255,255,0.8);
  position: relative;
}
.checkbox input:checked::after{
  content: "";
  position: absolute; inset: 4px;
  border-radius: 4px;
  background: linear-gradient(180deg, #ffffff, #d9d9d4);
  box-shadow: -1px -1px 1px rgba(255,255,255,0.8), 1px 1px 2px rgba(0,0,0,0.18);
}

.link{ color: var(--muted); text-decoration: none; border-bottom: 1px dotted rgba(0,0,0,0.25); }
.link:hover{ color: var(--ink); }

/* Responsiveness */
@media (max-width: 640px){
  .panel{ padding: var(--spacing-xl); }
  .actions{ grid-template-columns: 1fr; }
}
